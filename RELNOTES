Etherboot 5.2.5 (Release Date 2004/07/18)

This release (probably one of the last in the 5.2 stream) is mostly a 
cleanup and maintenance release.  Most of the changes correct bugs 
present in 5.2.4 and in some cases correct issues present since 5.2.0 
but were only recently reported.  

The sole new functionality is the addition of support for LACP (Link 
Aggregation Control Protocol) as defined in IEEE 803.2ad/D3.0.  This 
allows Etherboot to be used in combination with switches that require 
first "speaking" LACP before packets are allowed through the switch.

Support for loading FreeBSD images was fixed after resolving some 
issues present since 5.2.0

Support for loading Etherboot via pxe was improved for some pxe 
implementations by ignoring the return code when unloading UNDI.

Driver updates include cleanup and fixes for the e1000, lance, pcnet32,
prism2_pci, r8169, sundance and via-rhine.  Most notable: 

1) some e1000 based NICs that did not work in 5.2.4 now work,
2) confirmed that the lance driver works if Relocation is undefined and 
3) the prism2 based wireless pci cards now work again.

Numerous other small housekeeping and cleanup changes

Links:

Download: http://sourceforge.net/project/showfiles.php?group_id=4233
News: http://sourceforge.net/news/?group_id=4233
Help: http://lists.sourceforge.net/lists/listinfo/etherboot-users
Documentation: http://sourceforge.net/docman/?group_id=4233

Previous Versions (And still true!)

Here are some things you should be aware of:

There is a bug in the Perl supplied with RH9 (and possibly RH8). It
assumes UTF-8 even with the use bytes pragma. Either get an updated Perl
package or set LANG to en_US (or whatever your language name is, the
important thing is without the .UTF-8 suffix).

You can build an image that contains all the drivers. It's called
etherboot.zdsk (and other suffixes). It is advisable to restrict the
drivers to either ISA or PCI to reduce the footprint and also to avoid
unnecessary probing of the bus you don't have. Also note that if the
.com image is larger than 64kB, it will not work because .com images can
only carry 64kB worth of code.

The Quit option (formerly called Local) when ASK_PROMPT is defined will
take you back to the invoking environment, which is the BIOS for .zrom
images, DOS for .com images and nothing for .zdsk images.  Therefore if
you are booting from floppy, the behaviour of Q is undefined.  It is
unknown what LILO and other bootloaders do if a .zlilo image returns,
probably they don't expect a return.  Also note that the Q option will
also become undefined if anything is partially loaded that overwrites
the return trail to the environment.

The .lzdsk images used to work from a raw hard disk in 5.0 but the 5.2
.zdsk doesn't any more because it's too hard to support large images
with the old boot1a.s. Since very few people boot from a raw hard disk
(flash disks and supporting BIOSes seem to have some kind of filesystem
on it already rather than work like a raw hard disk) this is not going
to be fixed. Instead, you should use a bootloader like LILO to launch
Etherboot. If you feel inclined to write a hdload.S counterpart to
floppyload.S, feel free.

