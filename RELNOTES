Etherboot 5.2.6 (Release Date 2004/11/13)

This release has not been tested against gcc 3.4.  It is being worked 
on but issue reports (or fixes) are welcome.

This release contains a number of updates but is most notable for 
the addition of support for filo, btext console and the ability to 
boot from USB disks.  These features are only used when combined with
LinuxBIOS at present.  The filo directory contains a number of README 
files that explain the features.

To generate ISO images you will to get need syslinux and/or isolinux
separately.  Google for them.  If you have a very old BIOS and .liso 
images don't work you may wish to try adding the -s option of syslinux 
as a last resort.

Driver updates include cleanup and fixes for the eepro100, rtl8139, 
sis900, tlan, tulip and via-rhine.  In addition, Two new drivers were 
added for mtd80x and Davicom based cards.  The new "dmfe" driver still 
needs work but *may* work beter for you than the "davicom" driver.

Numerous other small housekeeping and cleanup changes

Download: http://sourceforge.net/project/showfiles.php?group_id=4233
News: http://sourceforge.net/news/?group_id=4233
Help: http://lists.sourceforge.net/lists/listinfo/etherboot-users
Documentation: http://sourceforge.net/docman/?group_id=4233

Previous Versions (And still true!)

Here are some things you should be aware of:

There is a bug in the Perl supplied with RH9 (and possibly RH8). It
assumes UTF-8 even with the use bytes pragma. Either get an updated Perl
package or set LANG to en_US (or whatever your language name is, the
important thing is without the .UTF-8 suffix).

You can build an image that contains all the drivers. It's called
etherboot.zdsk (and other suffixes). It is advisable to restrict the
drivers to either ISA or PCI to reduce the footprint and also to avoid
unnecessary probing of the bus you don't have. Also note that if the
.com image is larger than 64kB, it will not work because .com images can
only carry 64kB worth of code.

The Quit option (formerly called Local) when ASK_PROMPT is defined will
take you back to the invoking environment, which is the BIOS for .zrom
images, DOS for .com images and nothing for .zdsk images.  Therefore if
you are booting from floppy, the behaviour of Q is undefined.  It is
unknown what LILO and other bootloaders do if a .zlilo image returns,
probably they don't expect a return.  Also note that the Q option will
also become undefined if anything is partially loaded that overwrites
the return trail to the environment.

The .lzdsk images used to work from a raw hard disk in 5.0 but the 5.2
.zdsk doesn't any more because it's too hard to support large images
with the old boot1a.s. Since very few people boot from a raw hard disk
(flash disks and supporting BIOSes seem to have some kind of filesystem
on it already rather than work like a raw hard disk) this is not going
to be fixed. Instead, you should use a bootloader like LILO to launch
Etherboot. If you feel inclined to write a hdload.S counterpart to
floppyload.S, feel free.

